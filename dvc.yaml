# stages:
#   preprocess:
#     # Run the data preprocessing script
#     cmd: python preprocess_dataset.py params.yaml raw_dataset/weather.csv processed_dataset/weather.csv
#     deps:
#     - preprocess_dataset.py
#     - raw_dataset/weather.csv
#     - utils_and_constants.py
#     params:
#     - preprocess
#     outs:
#     - processed_dataset/weather.csv
#   train_and_evaluate:
#     # Run the model training and evaluation script
#     cmd: python train_and_evaluate.py params.yaml processed_dataset/weather.csv
#     deps:
#     - metrics_and_plots.py
#     - model.py
#     # Specify the preprocessed dataset as a dependency
#     - processed_dataset/weather.csv
#     - train_and_evaluate.py
#     - utils_and_constants.py
#     params:
#     - train_and_evaluate
#     outs:
#     - metrics.json
#     - confusion_matrix.png

stages:
  preprocess:
    cmd: python preprocess_dataset.py params.yaml raw_dataset/weather.csv processed_dataset/weather.csv
    deps:
    - preprocess_dataset.py
    - raw_dataset/weather.csv
    - utils_and_constants.py
    params:
    - preprocess
    outs:
    - processed_dataset/weather.csv
  train_and_evaluate:
    cmd: python train_and_evaluate.py params.yaml processed_dataset/weather.csv
    plots:
      # Set the target to the file containing predictions data
      - predictions.csv:
          # Write the plot template
          template: confusion
          x: predicted_label
          y: true_label
          x_label: 'Predicted label'
          y_label: 'True label'
          title: Confusion matrix
          # Set the cache parameter to store
          # plot data in Git repository
          cache: false
    deps:
    - metrics_and_plots.py
    - model.py
    - processed_dataset/weather.csv
    - train_and_evaluate.py
    - utils_and_constants.py
    params:
    - train_and_evaluate
    outs:
    - confusion_matrix.png
    metrics:
      - metrics.json:
          cache: false
